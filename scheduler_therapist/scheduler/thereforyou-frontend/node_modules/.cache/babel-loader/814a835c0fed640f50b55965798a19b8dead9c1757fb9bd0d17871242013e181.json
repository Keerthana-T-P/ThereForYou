{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tpgop\\\\OneDrive\\\\Desktop\\\\me\\\\markup_letter\\\\scheduler\\\\thereforyou-frontend\\\\src\\\\components\\\\Therapists.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Therapists = ({\n  setTherapist\n}) => {\n  _s();\n  const [therapists, setTherapists] = useState([]);\n  useEffect(() => {\n    axios.get('/therapists').then(response => {\n      setTherapists(response.data);\n    }).catch(error => {\n      console.error(\"There was an error fetching the therapists!\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a Therapist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: therapists.map(therapist => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setTherapist(therapist),\n        children: therapist.name\n      }, therapist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Therapists, \"+hi/5POHQyA/wGM2D+OvWOkcg1E=\");\n_c = Therapists;\nexport default Therapists;\nvar _c;\n$RefreshReg$(_c, \"Therapists\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Therapists","setTherapist","_s","therapists","setTherapists","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","therapist","onClick","name","id","_c","$RefreshReg$"],"sources":["C:/Users/tpgop/OneDrive/Desktop/me/markup_letter/scheduler/thereforyou-frontend/src/components/Therapists.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Therapists = ({ setTherapist }) => {\r\n    const [therapists, setTherapists] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/therapists')\r\n            .then(response => {\r\n                setTherapists(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"There was an error fetching the therapists!\", error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Select a Therapist</h2>\r\n            <ul>\r\n                {therapists.map(therapist => (\r\n                    <li key={therapist.id} onClick={() => setTherapist(therapist)}>\r\n                        {therapist.name}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Therapists;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACQ,GAAG,CAAC,aAAa,CAAC,CACnBC,IAAI,CAACC,QAAQ,IAAI;MACdH,aAAa,CAACG,QAAQ,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACvE,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA;MAAAa,QAAA,EACKT,UAAU,CAACc,GAAG,CAACC,SAAS,iBACrBnB,OAAA;QAAuBoB,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACiB,SAAS,CAAE;QAAAN,QAAA,EACzDM,SAAS,CAACE;MAAI,GADVF,SAAS,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACd,EAAA,CAzBIF,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}